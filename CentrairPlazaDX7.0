Sub CentrairPlazaDX1()
    Dim wsOrderSheet As Worksheet, wsGeneralLeadTime As Worksheet, wsSpecialLeadTime As Worksheet, wsROYLeadTime As Worksheet
    Dim nrow As Long, generalOrderDayColumn As Integer, specialOrderDayColumn As Integer, royOrderDayColumn As Integer
    Dim orderDay As String, productCode As String, brandCode As String
    Dim isGeneralOrderable As Boolean, isSpecialOrderable As Boolean, isROYOrderable As Boolean

    ' シートの参照を設定します。
    Set wsOrderSheet = ThisWorkbook.Sheets("食品全体（原紙）")
    Set wsGeneralLeadTime = ThisWorkbook.Sheets("一般リードタイム")
    Set wsSpecialLeadTime = ThisWorkbook.Sheets("特殊リードタイム")
    Set wsROYLeadTime = ThisWorkbook.Sheets("ROYリードタイム")

    ' 注文日を取得します。
    orderDay = wsOrderSheet.Range("T3").Value
    ' 注文日に該当する列を取得します。
    generalOrderDayColumn = WorksheetFunction.Match(orderDay, wsGeneralLeadTime.Rows(1), 0)
    specialOrderDayColumn = generalOrderDayColumn + 2
    
    ' 「食品全体（原紙）」の商品リストをループ処理します。
    For nrow = 5 To wsOrderSheet.Cells(Rows.Count, "A").End(xlUp).Row
        productCode = wsOrderSheet.Cells(nrow, "B").Value
        brandCode = wsOrderSheet.Cells(nrow, "A").Value

        ' 一般リードタイムでブランドが注文可能かどうかを確認します。
        isGeneralOrderable = True
        With wsGeneralLeadTime
            Dim foundGeneralCell As Range
            Set foundGeneralCell = .Range("A:A").Find(brandCode, LookIn:=xlValues, LookAt:=xlWhole)
            If Not foundGeneralCell Is Nothing Then
                isGeneralOrderable = .Cells(foundGeneralCell.Row, generalOrderDayColumn).Value <> "×"
            End If
        End With

        ' 特殊リードタイムで商品コードを検索します。
        isSpecialOrderable = False
        With wsSpecialLeadTime
            Dim foundSpecialCell As Range
            Set foundSpecialCell = .Range("B:B").Find(productCode, LookIn:=xlValues, LookAt:=xlWhole)
            If Not foundSpecialCell Is Nothing Then
                isSpecialOrderable = .Cells(foundSpecialCell.Row, specialOrderDayColumn).Value <> "×"
            Else
                isSpecialOrderable = False ' 見つからなければ特別注文可能ではありません。
            End If
        End With

        ' ROYリードタイムでROYブランドを確認します。
        isROYOrderable = True
        If brandCode = "ROY" Then
            Dim foundROYCell As Range
            Set foundROYCell = wsROYLeadTime.Columns("B:B").Find(What:=orderDay, LookIn:=xlValues, LookAt:=xlWhole)
            If Not foundROYCell Is Nothing Then
                royOrderDayColumn = foundROYCell.Column
                isROYOrderable = wsROYLeadTime.Cells(foundROYCell.Row, royOrderDayColumn + 2).Value <> "×"
            Else
                isROYOrderable = False
            End If
        End If

        ' 注文可能かどうかに基づいて行の表示/非表示を設定します。
        If brandCode = "ROY" Then
            wsOrderSheet.Rows(nrow).Hidden = Not isROYOrderable
        Else
            wsOrderSheet.Rows(nrow).Hidden = Not (isGeneralOrderable Or isSpecialOrderable)
        End If
    Next nrow
    
    ' 確認メッセージボックスを表示します。
    MsgBox "Hi, Buddy! 本日発注可能な商品を更新しましたよ。", vbInformation
End Sub

Function SumIfColor(rng As Range, color As Long) As Double
    Dim cell As Range
    Dim sum As Double
    
    sum = 0
    For Each cell In rng
        If cell.Interior.color = color Then
            If IsNumeric(cell.Value) Then
                sum = sum + cell.Value
            End If
        End If
    Next cell

    SumIfColor = sum
End Function


Sub CentrairPlazaDX2()
    Dim nrow As Long, lastCol As Long, nrow_1 As Long
    Dim wb1 As Workbook, wb2 As Workbook
    Dim sw_1 As Worksheet, sw_2 As Worksheet
    Dim orderDay As Integer
    Dim allowedBrands() As Variant
    Dim brandName As String
    Dim isBrandAllowed As Boolean
    Dim i As Integer

    ' ワークブックを開く
    Set wb1 = Workbooks.Open("C:\Users\Akitaka\Desktop\発注DX3.0\【NEW】セントレアプラザ発注書V3.0.xlsm")
    Set wb2 = Workbooks.Open("C:\Users\Akitaka\Desktop\発注DX3.0\【NEW】納品確認リスト.xlsm")

    ' ワークシートの参照を設定
    Set sw_1 = wb1.Sheets("食品全体（原紙）")
    Set sw_2 = wb2.Sheets("納品確認リスト")


    ' 目標色（白色）
    Dim targetColor As Long
    targetColor = RGB(255, 255, 255) ' 白色

    ' "納品確認リスト"のシートの各行に対して処理を行うループ
    For nrow = 3 To sw_2.Range("B" & Rows.Count).End(xlUp).Row
        lastCol = sw_2.Cells(nrow, Columns.Count).End(xlToLeft).Column
        sw_2.Cells(nrow, 4).Value = SumIfColor(sw_2.Range(sw_2.Cells(nrow, 5), sw_2.Cells(nrow, lastCol)), targetColor)
    Next nrow


    ' "食品全体（原紙）"のシートの各行に対して処理を行うループ
    For nrow_1 = 5 To sw_1.Range("B" & Rows.Count).End(xlUp).Row
        Dim lookupValue As Variant
        lookupValue = sw_1.Range("B" & nrow_1).Value
        If Not IsError(Application.Match(lookupValue, sw_2.Range("B:B"), 0)) Then
            sw_1.Range("I" & nrow_1).Value = Application.WorksheetFunction.VLookup(lookupValue, sw_2.Range("B:D"), 3, False)
        Else
            sw_1.Range("I" & nrow_1).Value = "" ' 該当するデータがない場合は空白を設定
        End If
    Next nrow_1

    sw_1.Activate
    sw_1.Range("I1").Select
    MsgBox "Ohye!無事に未納品分を集計できましたよ！"
End Sub

Sub CentrairPlazaDX3()
    Dim nrow As Long, wb1 As Workbook, wb2 As Workbook
    Dim sw_1 As Worksheet, sw_2 As Worksheet, sw_generalLeadTime As Worksheet, sw_specialLeadTime As Worksheet, sw_ROYLeadTime As Worksheet
    Dim brandName As String, productCode As String
    Dim orderDate As Date, deliveryDate As Date
    Dim orderQuantity As Integer, colIndex As Integer
    Dim foundRow As Range
    Dim weekdayColumn As Integer, deliveryDays As Variant

    ' ワークブックとワークシートの参照を設定します
    Set wb1 = Workbooks.Open("C:\Users\Akitaka\Desktop\発注DX3.0\【NEW】セントレアプラザ発注書V3.0.xlsm")
    Set wb2 = Workbooks.Open("C:\Users\Akitaka\Desktop\発注DX3.0\【NEW】納品確認リスト.xlsm")
    Set sw_1 = wb1.Sheets("食品全体（原紙）")
    Set sw_2 = wb2.Sheets("納品確認リスト")
    Set sw_generalLeadTime = wb1.Sheets("一般リードタイム")
    Set sw_specialLeadTime = wb1.Sheets("特殊リードタイム")
    Set sw_ROYLeadTime = wb1.Sheets("ROYリードタイム")
    orderDate = sw_1.Range("T2").Value

    ' 曜日に応じた列番号を計算します
    weekdayColumn = WorksheetFunction.weekday(orderDate, 2) + 4

    ' 食品全体（原紙）の各行をループ処理します
    For nrow = 5 To sw_1.Range("B" & Rows.Count).End(xlUp).Row
        brandName = sw_1.Range("A" & nrow).Value
        productCode = sw_1.Range("B" & nrow).Value
        orderQuantity = sw_1.Range("S" & nrow).Value

        ' 行が非表示の場合、発注数量を0に設定します
        If sw_1.Rows(nrow).Hidden Then orderQuantity = 0

        ' 初期状態では配送日数を「×」とします
        deliveryDays = "×"

        ' 特殊リードタイムで商品コードを確認します
        Set foundRow = sw_specialLeadTime.Columns(1).Find(What:=productCode, LookIn:=xlFormulas, LookAt:=xlWhole)
        If Not foundRow Is Nothing Then
            deliveryDays = foundRow.Offset(0, weekdayColumn).Value
        End If

        ' ROYリードタイムおよび一般リードタイムを確認します
        If deliveryDays = "×" Then
            If brandName = "ROY" Then
                ' ROYリードタイムで納品日を確認します
                Set foundRow = sw_ROYLeadTime.Columns(1).Find(What:=orderDate, LookIn:=xlFormulas, LookAt:=xlWhole)
                If Not foundRow Is Nothing Then
                    deliveryDays = foundRow.Offset(0, 2).Value
                End If
            Else
                ' 一般リードタイムで納品日を確認します
                Set foundRow = sw_generalLeadTime.Columns(1).Find(What:=brandName, LookIn:=xlFormulas, LookAt:=xlWhole)
                If Not foundRow Is Nothing Then
                    deliveryDays = foundRow.Offset(0, weekdayColumn).Value
                End If
            End If
        End If

        ' 配送日数が「×」でなければ処理を続行します
        If deliveryDays <> "×" Then
            ' 予定納品日を計算します
            deliveryDate = orderDate + deliveryDays

            ' 納品確認リストで商品コードを検索し、数量を更新します
            Dim matchRow As Long
            matchRow = 0
            For i = 3 To sw_2.Range("B" & Rows.Count).End(xlUp).Row
                If sw_2.Cells(i, "B").Value = productCode Then
                    matchRow = i
                    Exit For
                End If
            Next i

            ' 対応する納品日の列を探します
            colIndex = 0
            For i = 2 To sw_2.Cells(1, Columns.Count).End(xlToLeft).Column
                If sw_2.Cells(1, i).Value = deliveryDate Then
                    colIndex = i
                    Exit For
                End If
            Next i

            ' 商品数量を更新します
            If matchRow > 0 And colIndex > 0 Then
                sw_2.Cells(matchRow, colIndex).Value = IIf(orderQuantity = 0, "", orderQuantity)
            End If
        End If
    Next nrow

    ' 処理完了のメッセージボックスを表示します
    MsgBox "Congratulations!納品リストに反映できましたよ。", vbInformation

    ' 納品確認リストのA列に戻ります
    sw_2.Activate
    sw_2.Range("A3").Select

    ' ワークブックは開いたままにします
    ' wb2.Close SaveChanges:=True
End Sub
