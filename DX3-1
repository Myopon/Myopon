Sub CentrairPlazaDX3()
    ' エラーハンドリング
    On Error GoTo ErrorHandler
    Dim nrow As Long, i As Long, wb1 As Workbook, wb2 As Workbook
    Dim sw_1 As Worksheet, sw_2 As Worksheet, sw_generalLeadTime As Worksheet, sw_ROYLeadTime As Worksheet
    Dim brandName As String, productCode As String
    Dim orderDate As Date, deliveryDate As Date
    Dim orderQuantity As Integer, colIndex As Integer
    Dim weekdayColumn As Integer, deliveryDays As Variant
    Dim lastRow As Long, found As Boolean
    Dim foundRow As Range

    ' ファイルを開くダイアログを表示し、ユーザーが選択したファイルのパスを取得
    Dim filePath As Variant
    filePath = Application.GetOpenFilename("Excel ファイル (*.xlsm), *.xlsm")

    ' ユーザーがファイルを選択しなかった場合、処理を中断
    If filePath = False Then
        MsgBox "処理がキャンセルされました。", vbInformation
        Exit Sub
    End If

    ' ワークブックとシートの参照設定
    Set wb1 = Workbooks.Open(filePath)
    Set wb2 = ThisWorkbook
    Set sw_1 = wb1.Sheets("食品全体（原紙）")
    Set sw_2 = wb2.Sheets("納品確認リスト")
    Set sw_generalLeadTime = wb1.Sheets("一般リードタイム")
    Set sw_ROYLeadTime = wb1.Sheets("ROYリードタイム")
    orderDate = sw_1.Range("T2").Value
    weekdayColumn = WorksheetFunction.Weekday(orderDate, 2) + 4

    ' 食品全体（原紙）の各行をループ処理
    For nrow = 5 To sw_1.Range("B" & Rows.Count).End(xlUp).Row
        brandName = sw_1.Range("A" & nrow).Value
        productCode = sw_1.Range("B" & nrow).Value
        orderQuantity = sw_1.Range("S" & nrow).Value

        ' 非表示行の場合、次の行へ
        If sw_1.Rows(nrow).Hidden Or orderQuantity = 0 Then GoTo NextIteration

        deliveryDays = "×"

        ' ROYリードタイムおよび一般リードタイムを確認
        If brandName = "ROY" Then
            lastRow = sw_ROYLeadTime.Cells(sw_ROYLeadTime.Rows.Count, "B").End(xlUp).Row
            found = False
            
            For i = 1 To lastRow
                If sw_ROYLeadTime.Cells(i, "B").Value2 = orderDate And _
                   sw_ROYLeadTime.Cells(i, "A").Value = brandName Then
                    deliveryDays = sw_ROYLeadTime.Cells(i, "D").Value
                    found = True
                    Exit For
                End If
            Next i

            If Not found Then deliveryDays = "×"
        Else
            Set foundRow = sw_generalLeadTime.Columns(1).Find(What:=brandName, LookIn:=xlFormulas, LookAt:=xlWhole)
            If Not foundRow Is Nothing Then
                deliveryDays = foundRow.Offset(0, weekdayColumn).Value
            End If
        End If

        ' 配送日数が「×」でなければ処理を続行
        If deliveryDays <> "×" And IsNumeric(deliveryDays) Then
            If deliveryDays = 0 Then
                deliveryDate = orderDate
            Else
                deliveryDate = orderDate + deliveryDays
            End If

            ' 納品確認リストで商品コードを検索し、数量を更新
            Dim matchRow As Long
            matchRow = 0
            For i = 3 To sw_2.Range("B" & Rows.Count).End(xlUp).Row
            If sw_2.Cells(i, "B").Value = productCode Then
            matchRow = i
            Exit For
            End If
            Next i
        If matchRow > 0 Then
            ' 対応する納品日の列を探す
            colIndex = 0
            For i = 2 To sw_2.Cells(1, Columns.Count).End(xlToLeft).Column
                If sw_2.Cells(1, i).Value = deliveryDate Then
                    colIndex = i
                    Exit For
                End If
            Next i

            If colIndex > 0 Then
                ' 商品数量を更新する。既存の値を上書きしない。
                If IsEmpty(sw_2.Cells(matchRow, colIndex).Value) Then
                    sw_2.Cells(matchRow, colIndex).Value = orderQuantity
                End If
            End If
        End If
    End If
NextIteration:
Next nrow
' 正常終了時のメッセージ
MsgBox "処理が完了しました。", vbInformation
Exit Sub

' エラーハンドリング
ErrorHandler:
MsgBox "エラーが発生しました。" & vbCrLf & "エラーの位置：" & Err.Description, vbCritical
End Sub
